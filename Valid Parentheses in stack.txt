// Valid Parentheses in stack

import java.util.*;

public class Stock {
    public static boolean isValid(String str){
        // create stack
        Stack<Character> s = new Stack<>();

        for(int i=0; i<str.length(); i++){
            //ch in store opening & closing brackets
            char ch = str.charAt(i);

          // opening
            if(ch == '(' || ch == '{' || ch == '[') { 
                   s.push(ch);
            } else {
                //closing
                if(s.isEmpty()) {
                    return false;
                }
                // check pair form
                // s.peek check opening bracket on top & 
                // ch == ')' check closing bracket
                if( (s.peek() == '(' && ch == ')') // ()
                    || (s.peek() == '{' && ch == '}') //{}
                    || (s.peek() == '[' && ch == ']') ){ //[]
                        s.pop();
                    } else {
                        return false;
                    }
            }
        }

    if(s.isEmpty()) {
        return true;
    } else {
        return false;
    } 

}   

    public static void main(String args []){
        String str = "({})[]"; //true
        System.out.println(isValid(str));
    }
}



__________________________ OUTPUT________________________________
TRUE